# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-27 22:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/text.rst:8
# ecb99dd187c54bbaa7dc8fb2c6b8672b
msgid "Text"
msgstr ""

#: ../../source/text.rst:10
# 279a3642627c49b0afcae6d035aff53e
msgid "Ren'Py contains several ways of displaying text. The :ref:`say <say-statement>` and :ref:`menu <menu-statement>` are primarily concerned with the display of text to the user. The user interface often contains text, displayed using the :ref:`text <sl-text>`, :ref:`textbutton <sl-textbutton>`, and :ref:`label <sl-label>` screen language statements. These functions, along with others, create :func:`Text` displayables, and show them on the screen."
msgstr ""

#: ../../source/text.rst:18
# f40bddc6c8aa4e62b7577a2e3ef5ce0d
msgid "The Text displayable is responsible for managing the process of showing the text to the user. The text displayable performs actions in the following order:"
msgstr ""

#: ../../source/text.rst:23
# fff20401352147bba5fa99e1a9b3ff30
msgid "Translating text."
msgstr ""

#: ../../source/text.rst:24
# b5fea32dfca94fc9a28babc4d7d50973
msgid "Interpolating data into the text."
msgstr ""

#: ../../source/text.rst:25
# 25da20fa37d04f5da18530ca0094b25d
msgid "Styling the text using styles and text tags."
msgstr ""

#: ../../source/text.rst:26
# 01dc2f1483874db4a04e9eb43dd8930b
msgid "Laying out the styled text."
msgstr ""

#: ../../source/text.rst:27
# 460480425a154b2f81463841d93de401
msgid "Drawing the text to the screen."
msgstr ""

#: ../../source/text.rst:29
# b26ffcfbd2474b5a8f82bd7e353467a1
msgid "This chapter discusses the process of text display in Ren'Py."
msgstr ""

#: ../../source/text.rst:33
# b1d3a154d37a402aac707af197bc9884
msgid "Escape Characters"
msgstr ""

#: ../../source/text.rst:35
# 6f09fe07665d440b82d8ada3a7024adf
msgid "There are three special characters that can control the way Ren'Py displays text. A creator needs to be aware of these characters to ensure that their writing is not accidentally misinterpreted by the engine."
msgstr ""

#: ../../source/text.rst:58
# 5f1206a0c6aa425b8948f3d5597cceb1
msgid "\\ (backslash)"
msgstr ""

#: ../../source/text.rst:40
# e79328b1e921445d8574687d1c52a98f
msgid "The backslash character is used to introduce when writing a Ren'Py or Python string. Some common escape codes are:"
msgstr ""

#: ../../source/text.rst:44
# f54f4a0aa8d14d76a38319a365544531
msgid "\\\\\" (backslash-doublequote)"
msgstr ""

#: ../../source/text.rst:44
# 44fe51eafe224c078d92a55634e5aaaa
msgid "Includes a doublequote in a double-quoted string."
msgstr ""

#: ../../source/text.rst:47
# e449ce8269934f3eb52c715d33e839cf
msgid "\\\\' (backslash-quote)"
msgstr ""

#: ../../source/text.rst:47
# bb6f4eb7926b4e029636da3375704f8c
msgid "Includes a single quote in a single-quoted string."
msgstr ""

#: ../../source/text.rst:52
# d94119129108452cbc1ca870c3601381
msgid "\\\\\\  (backslash-space)"
msgstr ""

#: ../../source/text.rst:50
# 3e9a0a4c7ff949f88dfbed2f076d3e53
msgid "Includes an additional space in a Ren'Py string. By default, Ren'Py script text collapses adjacent whitespace into a single space character."
msgstr ""

#: ../../source/text.rst:55
# 45a87e262b59460bb5d3e5865629d5f1
msgid "\\\\n (backslash-n)"
msgstr ""

#: ../../source/text.rst:55
# 466f1b06737e4e44bcb919b7d8200668
msgid "Includes a newline character in the text."
msgstr ""

#: ../../source/text.rst:58
# 54da0591309b427e8595e930d0813e08
msgid "\\\\\\\\ (backslash-backslash)"
msgstr ""

#: ../../source/text.rst:58
# 732840ed0d2144dc99b2d50d8587825b
msgid "Includes a backslash character in the text."
msgstr ""

#: ../../source/text.rst:63
# 5146d80a0bf24025bfe141ebbbc9c684
msgid "[ (left bracket)"
msgstr ""

#: ../../source/text.rst:61
# 70a3385ea6034965af430fb2c1a76d19
msgid "The left bracket is used to introduce interpolation of a value into the text. To include a single left bracket in your text, double it - write ``[[``."
msgstr ""

#: ../../source/text.rst:68
# cbb7b4ed76b54c28a9bbf5c8ad983be2
msgid "{ (left brace)"
msgstr ""

#: ../../source/text.rst:66
# d3f74ae9682d418e8f668e8ad814f969
msgid "The left brace is used to introduce a text tag. To include a left brace in your text, double it - write ``{{``."
msgstr ""

#: ../../source/text.rst:71
# d3564d415777419eaa6d499bdf128b46
msgid "Interpolating Data"
msgstr ""

#: ../../source/text.rst:73
# 8eea68a7cfcc499bb2e2caff6f0c4978
msgid "Ren'Py supports interpolating data into the text string before it is displayed. For example, if the player's name is stored in the ``playername`` variable, one could write a line of dialogue like::"
msgstr ""

#: ../../source/text.rst:79
# 6c991a3efb4d4ec596f493ff6b7acf5b
msgid "Ren'Py will interpolate variables found in the global store. When using a text widget in a screen, Ren'Py will also interpolate screen local variables. (This can be overridden by supplying an explicit scope argument to the Text displayable.)"
msgstr ""

#: ../../source/text.rst:84
# 2ed5c8d9b3ad4b5ba57ee4a75db60277
msgid "Ren'Py isn't limited to interpolating simple variables. It can also interpolate fields and components of tuples. So it's possible to have code like::"
msgstr ""

#: ../../source/text.rst:90
# 4144bf3ee7a64925bff29ee5ac571d52
msgid "It's possible to apply formatting codes when displaying numbers. This code will display a floating point number to two decimal places::"
msgstr ""

#: ../../source/text.rst:96
# cc8b9758f6ce4232a65c37b3273d4813
msgid "Ren'Py's string interpolation is taken from the :pep:`3101` string formatting syntax. Ren'Py uses [ to introduce string formatting because { was taken by text tags."
msgstr ""

#: ../../source/text.rst:100
# fc4733dbb8d640c6bd3bc406cc522a8d
msgid "Along with the !s and !r conversion flags supported by Python, Ren'Py supports !q and !t conversion flag. The !q conversion flag ensures that text tags are properly quoted, so that displaying a string will not introduce unwanted formatting constructs. For example::"
msgstr ""

#: ../../source/text.rst:107
# bbe3c2ccafad4644a798efebd23f9008
msgid "The !t flag will translate the interpolated string::"
msgstr ""

#: ../../source/text.rst:118
# 54797b21d3fc4bf09e6c04978ee3bf15
msgid "Styling and Text Tags"
msgstr ""

#: ../../source/text.rst:120
# ef0713efdf4e4a3a85d716e95d288167
msgid "In Ren'Py, text gains style information in two ways. The first is from the style that is applied to the entire block of text. Please see the section about the :ref:`style system <styles>` for more details, especially the section on :ref:`text style properties <text-style-properties>`."
msgstr ""

#: ../../source/text.rst:125
# a9ea939d34ed4316ba3cab89a8c11102
msgid "The second way is through text tags. Text tags are suitable for styling a portion of text block, or a small fraction of the text blocks in the program. If you find yourself applying the same text tags to every line of text, consider using a style instead."
msgstr ""

#: ../../source/text.rst:130
# 5fd2ccafe5b449ceaf193c5cbac79a32
msgid "There are two text tags. Some text tags are self-closing, while others require a closing tag. When multiple closing tags are used, they should be closed last open, first closed order - Ren'Py will reject incorrect nesting. For example::"
msgstr ""

#: ../../source/text.rst:142
# 54aa32698bf84638944d67e007d33aec
msgid "Some text tags take an argument. In that case, the tag name is followed by an equals sign (=), and the argument. The argument may not contain the right-brace (}) character. The meaning of the argument varies based on the text tag."
msgstr ""

#: ../../source/text.rst:148
# e77718fdb5ca42ba9936528e43f6bd2c
msgid "General Text Tags"
msgstr ""

#: ../../source/text.rst:150
# 6fa28952e552494e839a7eb428666a5d
msgid "Tags that apply to all text are:"
msgstr ""

#: ../../source/text.rst:154
# d3bcba1de192436c897c8f3e8d9eb80b
msgid "The anchor tag creates a hyperlink between itself and its closing tag. While the behavior of the hyperlink is controlled by the :propref:`hyperlink_functions` style property, the default handler has the following behavior."
msgstr ""

#: ../../source/text.rst:159
# e06fedcb94f54260be957d18e1d5cddc
msgid "Hyperlinks are rendered using the ``style.hyperlink_text`` style."
msgstr ""

#: ../../source/text.rst:161
# 13d4bf26aece42069488a655849c17ee
msgid "If the argument begins with the text ``\"http://\"``, clicking on it opens the url in a web browser. Otherwise, the argument is interpreted as a label, which is called in a new context. This allows hyperlinks to be used to define terms."
msgstr ""

#: ../../source/text.rst:166
# 56b5291394354e7a8cd1d632e0f66203
msgid "Apart from the change in style, there is no specific behavior when a hyperlink is hovered."
msgstr ""

#: ../../source/text.rst:190
# 8b02390886394e95b1c342bb3143bd46
msgid "The bold tag renders the text between itself and its closing tag in a bold font. ::"
msgstr ""

#: ../../source/text.rst:197
# f3320b01277b4df88a7db2ba03bbc427
msgid "The color text tag renders the text between itself and its closing tag in the specified color. The color should be in #rgb, #rgba, #rrggbb, or #rrggbbaa format. ::"
msgstr ""

#: ../../source/text.rst:205
# 049a046bbf6b49619b2442411e68a87b
msgid "The characters per second tag sets the speed of text display, for text between the tag and its closing tag. If the argument begins with an asterisk, it's taken as a multiplier to the current text speed. Otherwise, the argument gives the speed to show the text at, in characters per second. ::"
msgstr ""

#: ../../source/text.rst:215
# 9390c721223949239fe9b724f83bae1f
msgid "The font tag renders the text between itself and its closing tag in the specified font. The argument is the filename of the font to use. ::"
msgstr ""

#: ../../source/text.rst:223
# 0177f427b5db49bbb9269a9329ef15cd
msgid "The italics tag renders the text between itself and its closing tag in italics. ::"
msgstr ""

#: ../../source/text.rst:230
# c98f9d5535fa4333b97f5cf466cdec4f
msgid "The kerning tag is a tag that adjust the kerning of characters between itself and its closing tag. It takes as an argument a floating point number giving the number of pixels of kerning to add to each kerning pair. (The number may be negative to decrease kerning.) ::"
msgstr ""

#: ../../source/text.rst:240
# e780288d7fcc42ea977e152d5c5cba83
msgid "The image tag is a self-closing tag that inserts an image into the text. The image should be the height of a single line of text. The argument should be either the image filename, or the name of an image defined with the image statement. ::"
msgstr ""

#: ../../source/text.rst:249
# ed676585189b4a5b824f058bbb3658c4
msgid "The strikethrough tag draws a line through text between itself and its closing tag. ::"
msgstr ""

#: ../../source/text.rst:256
# 96a3980958f94beab6aa73667381c2da
msgid "The ruby bottom tag marks text between itself and its closing tag as ruby bottom text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""

#: ../../source/text.rst:262
# 52a2f8b9f24642d49a13cd60433e1666
msgid "The ruby top tag marks text between itself and its closing tag as ruby top text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""

#: ../../source/text.rst:268
# 93671f073796478ea22f07b01c70a141
msgid "The size tag changes the size of text between itself and its closing tag. The argument should be an integer, optionally preceded by + or -. If the argument is just an integer, the size is set to that many pixels high. Otherwise, the size is increased or decreased by that amount. ::"
msgstr ""

#: ../../source/text.rst:278
# 1120d58f736a4dd4820778f7849360fc
msgid "The space tag is a self-closing tag that inserts horizontal space into a line of text. As an argument, it takes an integer giving the number of pixels of space to add. ::"
msgstr ""

#: ../../source/text.rst:286
# d62bf94416d04e599ad3c29bae7c8aca
msgid "The underline tag underlines the text between itself and its closing tag. ::"
msgstr ""

#: ../../source/text.rst:293
# 19a3cf1661064d1591aaf1360f5caab4
msgid "The vspace tag is a self-closing tag that inserts vertical space between lines of text. As an argument, it takes an integer giving the number of pixels of space to add. ::"
msgstr ""

#: ../../source/text.rst:301
# 146b9deec9884ee8a0befc70b46db7a4
msgid "Text tags beginning with # are ignored, but can be included to distinguish strings for the purpose of translation. ::"
msgstr ""

#: ../../source/text.rst:307
# 27ba596abd124669becac611d4e0731c
msgid "Dialogue Text Tags"
msgstr ""

#: ../../source/text.rst:309
# d9d9d81eab5a44669f2940e1696afa8e
msgid "Text tags that only apply to dialogue are:"
msgstr ""

#: ../../source/text.rst:313
# 1cc963feaeb04869a2250fb77454e777
msgid "If the fast tag is displayed in a line of text, then all text before it is displayed instantly, even in slow text mode. The fast tag is a self-closing tag. ::"
msgstr ""

#: ../../source/text.rst:323
# 45be3e40a8094e9785e8cdbb3c30b145
msgid "The no-wait tag is a self-closing tag that causes the current line of dialogue to automatically dismiss itself once the end of line has been displayed. ::"
msgstr ""

#: ../../source/text.rst:333
# 55398171c307403d891888b1b8fc5afe
msgid "The paragraph pause tag is a self-closing tag that terminates the current paragraph, and waits for the user to click to continue. If it is given an argument, the argument is interpreted as a number, and the wait automatically ends after that many seconds have passed. ::"
msgstr ""

#: ../../source/text.rst:343
# 917e1b6eb0f54da1a741ff5a466ee121
msgid "The wait tag is a self-closing tag that waits for the user to click to continue. If it is given an argument, the argument is interpreted as a number, and the wait automatically ends after that many seconds have passed. ::"
msgstr ""

#: ../../source/text.rst:352
# 800482b9ea3642c48e4c5fc432cc7f17
msgid "User-Defined Text Tags"
msgstr ""

#: ../../source/text.rst:354
# 47fd1ade9deb4e7dbd23736670e1e250
msgid "Ren'Py also supports user-defined text tags. A user-defined text tag is a text tag where the tag name is empty. In this case, the argument is taken to be the name of a style. The text between this tag and the closing tag has the following properties set to those defined in the style:"
msgstr ""

#: ../../source/text.rst:360
# dd12a68ed6c14dfb883223f45b92adfd
msgid "antialias"
msgstr ""

#: ../../source/text.rst:361
# 4eefffd271d9469b808b13ab1ed1ef50
msgid "font"
msgstr ""

#: ../../source/text.rst:362
# 72621610a74541469c9fca04427ff54a
msgid "size"
msgstr ""

#: ../../source/text.rst:363
# eef6c46a446b4a8d900b2e038149ce26
msgid "bold"
msgstr ""

#: ../../source/text.rst:364
# bdf56c26a30947f1a4ebd6109f12a569
msgid "italic"
msgstr ""

#: ../../source/text.rst:365
# 30e2e71c8b5b4ed9ae664774765a495b
msgid "underline"
msgstr ""

#: ../../source/text.rst:366
# 119b15582c924384b5982a6e09cfae3a
msgid "strikethrough"
msgstr ""

#: ../../source/text.rst:367
# 05567da6475e4be184422c99e1f8e5ea
msgid "color"
msgstr ""

#: ../../source/text.rst:368
# 3ac1a476e1384555ade312b005e6e9fa
msgid "black_color"
msgstr ""

#: ../../source/text.rst:369
# 1227bea85505486388e2627cebec4150
msgid "kerning"
msgstr ""

#: ../../source/text.rst:373
# e661e16eb1ec46c6bbb3fe5817dc8465
msgid "Non-English Languages"
msgstr ""

#: ../../source/text.rst:375
# 1aa5ce2473ef4c37bdc5fa7fb0b112e4
msgid "The default font for Ren'Py contains characters for English and many other languages. For size reasons, it doesn't contain the characters required to render other languages, including Chinese, Japanese, and Korean. In order to support these language, a project must first change the default font, using code like::"
msgstr ""

#: ../../source/text.rst:384
# 257870e9b11f4a33af9dfb0440763d79
msgid "Ren'Py should then support most world languages without further configuration. However, Korean can be written with or without spacing between words. Ren'Py has a special mode to support Korean with spaces, which can be enabled with the code::"
msgstr ""

#: ../../source/text.rst:392
# 6e195308b8b5429eab6f5b63cfdad786
msgid "Japanese has multiple rules for line breaking. We recommend starting with \"japanese-normal\", and moving to \"japanese-loose\" or \"japanese-strict\" for more or less break opportunities, respectively.::"
msgstr ""

#: ../../source/text.rst:399
# 1eb28cfaa32e47c69eae48d71c8c607b
msgid "Ideographic languages provide a large number of opportunities for line breaking. To enable a faster but less-accurate line-breaking algorithm, use the code::"
msgstr ""

#: ../../source/text.rst:406
# 044ffd2c16794a23a0d189635d4f51fc
msgid "The faster line-breaking algorithm is not be necessary unless the game is displaying huge amounts of text, such as in NVL-mode."
msgstr ""

#: ../../source/text.rst:409
# b70d07a9d3e54fdd87230f56ae681dfc
msgid "The line breaking algorithms can be further configured using the :func:`renpy.language_tailor` function."
msgstr ""

#: ../../source/text.rst:414
# a856b024a43f49f7918c7726e003b648
msgid "Vertical Text"
msgstr ""

#: ../../source/text.rst:416
# 87526507ad8042589b4e9ff61b4bc61f
msgid "When the :propref:`vertical` style property is set, Ren'Py will produce vertically oriented text. The text is written top-to-bottom, right-to-left."
msgstr ""

#: ../../source/text.rst:420
# f7344a73c91e49d285d3e0adadeb0eac
msgid "There are two text tags that interact with vertical text."
msgstr ""

#: ../../source/text.rst:424
# 2532eebe956a495eb2ce231a874605cf
msgid "Includes horizontally-oriented text inside vertical text."
msgstr ""

#: ../../source/text.rst:428
# 9c2c5a207ccf40178f922e5a008d1107
msgid "Includes vertically-oriented text inside horizontal text. (This will not rotate the text to the vertical orientation.)"
msgstr ""

#: ../../source/text.rst:435
# eaa19bf7c03f40e2ab4e4160ff599d6c
msgid "Ruby Text"
msgstr ""

#: ../../source/text.rst:437
# e0fa1a27868645e19f1ddf92b3683cd7
msgid "Ruby text (also known as furigana or interlinear annotations) is a way of placing small text above a character or word. There are several steps required for your game to support Ruby text."
msgstr ""

#: ../../source/text.rst:441
# 408ceb4295b64c909fd123766fca0540
msgid "First, you must set up styles for the ruby text. The following style changes are required:"
msgstr ""

#: ../../source/text.rst:444
# 9258182994f7417385a0236789736c0a
msgid "The :propref:`line_leading` property must be used to leave enough vertical space for the ruby text."
msgstr ""

#: ../../source/text.rst:446
# c0fc49478326497fbb28c47740cbb1ad
msgid "A new named style must be created. The properties of this style, such as :propref:`size` should be set in a fashion appropriate for ruby text."
msgstr ""

#: ../../source/text.rst:449
# e3fc5c214fef448d8ffa05450126be13
msgid "The yoffset of the new style should be set, in order to move the ruby text above the baseline."
msgstr ""

#: ../../source/text.rst:451
# 4181c672b48f487584793b6f6ed036c3
msgid "The :propref:`ruby_style` field of the text's style should be set to the newly-created style."
msgstr ""

#: ../../source/text.rst:454
#: ../../source/text.rst:471
#: ../../source/text.rst:553
# 2bdc39cb9c1e4b5c8b23b616829b9607
# 6abf24fea2414dd398ed38748f718ae8
# 70bc308ad2dd4a1090e479503e3d18de
msgid "For example::"
msgstr ""

#: ../../source/text.rst:465
# 8e8f19b1d9744adb98d2195b757ad650
msgid "Once Ren'Py has been configured, ruby text can be included using the rt and rb text tags. The rt tag is used to mark one or more characters to be displayed as ruby text. If the ruby text is preceded by text enclosed in the rb tag, the ruby text is centered over that text. Otherwise, it is centered over the preceding character."
msgstr ""

#: ../../source/text.rst:477
# a2635bd1c33f4ca2badbcbcdb88b995c
msgid "It's the creator's responsibility to ensure that ruby text does not leave the boundaries of the text. It may be necessary to add leading or spaces to the left and right of the text to prevent these errors from occurring."
msgstr ""

#: ../../source/text.rst:483
# 951aa4cd6645437b9d8d3401e9974033
msgid "Fonts"
msgstr ""

#: ../../source/text.rst:485
# 07c4453851ed4abe8062c6fee8470003
msgid "Ren'Py supports Truetype and Image-Based fonts."
msgstr ""

#: ../../source/text.rst:487
# d1bbe8972f1144b98af7bde026589b38
msgid "A Truetype font is specified by giving the name of the font file. The file must be present in the game directory, or one of the archive files."
msgstr ""

#: ../../source/text.rst:491
# fc2059ef5a0640789a1e9f683628688e
msgid "Ren'Py also supports Truetype collections that define more than one font. When accessing a collection, use the 0-based font index, followed by an at-sign and the file name. For example, \"0@font.ttc\" is the first font in a collection, \"1@font.ttc\" the second, and so on."
msgstr ""

#: ../../source/text.rst:498
# f6762d101954433bbe309c26f41fe681
msgid "Font Replacement"
msgstr ""

#: ../../source/text.rst:500
# f327dfd474d4412e994c39b629feb8ea
msgid "The :var:`config.font_replacement_map` variable is used to map fonts. The combination of font filename, boldness, and italics is mapped to a similar combination. This allows a font with proper italics to be used instead of the automatically-generated italics."
msgstr ""

#: ../../source/text.rst:505
# 5148baa2887f4a9682c013bc13922b6d
msgid "Once such mapping would be to replace the italic version of the Deja Vu Sans font with the official oblique version. (You'll need to download the oblique font from the web.)::"
msgstr ""

#: ../../source/text.rst:512
# a5091d06ff4e4a70b1f797111c0b5297
msgid "This mapping can improve the look of italic text."
msgstr ""

#: ../../source/text.rst:515
# 8c31927fd0254ca4bd9fbf6b3b2237ff
msgid "Image-Based Fonts"
msgstr ""

#: ../../source/text.rst:517
# 35e73826c466490ebf157a2023f0b890
msgid "Image based fonts can be registered by calling one of the following registration functions. Registering an image-based font requires the specification of a name, size, boldness, italicness, and underline. When all of these properties match the registered font, the registered font is used."
msgstr ""

#: ../../source/inc/image_fonts:5
# b43e9fdf231347fd9cb0ea4ce9b72d14
msgid "This registers a BMFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:9
# 2aab84af49c142fc9e0e9975001c2b5a
msgid "Please see the `BMFont home page <http://www.angelcode.com/products/bmfont/>`_ for the tool that creates BMFonts. Ren'Py expects that the filename parameter will be to a file in the BMFont text format, that describes a 32-bit font. The Alpha channel should contain the font information, while the Red, Green, and Blue channels should be set to one. The image files, kerning, and other control information is read out of the BMFont file."
msgstr ""

#: ../../source/inc/image_fonts:16
# dbfbbed8df1747c7b7c3dceaae1705e8
msgid "We recommend including Latin and General Punctuation as part of your BMFont, to ensure all of the Ren'Py interface can render."
msgstr ""

#: ../../source/inc/image_fonts:20
#: ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
# 7d945588ecf049c7b3cf345c83320c62
# aa75f9563b40445ab619cd494cee65ed
# 3953b189ef8849b2a3c1cd23ba46e35e
msgid "`name`"
msgstr ""

#: ../../source/inc/image_fonts:20
#: ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
# 0f27cd4160ac47ef85b0e169de40c502
# 122f15a0ad8d4b6589125d013cc6b4be
# bd6cf65f6cda47fb99e10ca74a648bcf
msgid "The name of the font being registered, a string."
msgstr ""

#: ../../source/inc/image_fonts:23
#: ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
# 56dd84dd39d4413c85b90bef87fa00a4
# 9c224e018d8143038ab9a4eea18a32d3
# bb1aeb04372145e0af31c108bab06fda
msgid "`size`"
msgstr ""

#: ../../source/inc/image_fonts:23
#: ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
# b80d0300b30f48aea285fc8e3feeca65
# c071bf96ffbe4547ad25535981d6dad3
# 72a5199455864de0ad58d20d797f87e0
msgid "The size of the font being registered, an integer."
msgstr ""

#: ../../source/inc/image_fonts:26
#: ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
# 5aacc11df3884ad1b6d31cceaef623b7
# 46888f04197746e7bb66513990316d57
# 979d185d508d45e683d7fb141d26debb
msgid "`bold`"
msgstr ""

#: ../../source/inc/image_fonts:26
#: ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
# 36ede35256014e53a3c94607de70afff
# 3a0f8d77c66a41868726a106a409447d
# e063a407f596405ba826bdbb64eb86f2
msgid "The boldness of the font being registered, a boolean."
msgstr ""

#: ../../source/inc/image_fonts:29
#: ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
# 0efe72fb0586416cadac86020d4b8372
# 943360b47a5d4ea0835691d8f07c8c6c
# f6d4de0202f14c37b9a58f448a1dc07a
msgid "`italics`"
msgstr ""

#: ../../source/inc/image_fonts:29
#: ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
# f2e7ef19b6e94d1cb012fbd399a74365
# 5a467181d56e4aa1862582635732ef01
# 5c31591fb6b2462994a03ed20f88f602
msgid "The italicness of the font being registered, a boolean."
msgstr ""

#: ../../source/inc/image_fonts:32
#: ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
# bd44f09ae2d64196ac842688b958c6d5
# 3ae2fc6f905849b3b9708896a051e607
# 90ff866d981a4961a0f68657999db04d
msgid "`underline`"
msgstr ""

#: ../../source/inc/image_fonts:32
#: ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
# cf5c24d7938b488f889aa6f4c282d702
# 37a221abc6424a42828ad0b735bc9277
# 147ae730d02d45a59347ba9f0a90efda
msgid "An ignored parameter."
msgstr ""

#: ../../source/inc/image_fonts:34
#: ../../source/inc/image_fonts:65
#: ../../source/inc/image_fonts:104
# ed61d9672e3e4c05bffd91dc7ddcca7a
# a09f758f4cd04444a11405eaf1a85713
# 41d1991fc47841d4ba4a5776cf69a0d3
msgid "`filename`"
msgstr ""

#: ../../source/inc/image_fonts:35
# e496b8f5010d4f489d0878ef515a9d4e
msgid "The file containing BMFont control information."
msgstr ""

#: ../../source/inc/image_fonts:39
# 6962147bc8e24030b5046b1a79b30601
msgid "This registers a MudgeFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:43
# 25994de736074bcd9012e0070f6e8da4
msgid "Please see the `MudgeFont home page <http://www.larryhastings.com/programming/mudgefont/>`_ for the tool that creates MudgeFonts. Ren'Py assumes that character codes found in the MudgeFont xml file are unicode character numbers, and ignores negative character codes."
msgstr ""

#: ../../source/inc/image_fonts:64
# b2ec86a81a4b4ddbb6009a02c1454ccd
msgid "The file containing the MudgeFont image, a string. The image is usually a TGA file, but could be a PNG or other format that Ren'PY supports."
msgstr ""

#: ../../source/inc/image_fonts:68
# e21d2b17162749a8b1f35550ad9e4fb3
msgid "`xml`"
msgstr ""

#: ../../source/inc/image_fonts:68
# 80ebab07618749ae806ff7015a8063db
msgid "The xml file containing information generated by the MudgeFont tool."
msgstr ""

#: ../../source/inc/image_fonts:71
#: ../../source/inc/image_fonts:107
# de65e915b9674fa1bd599beb037ed46a
# e318dc75c5e94b22920cb51d6f58f0f2
msgid "`spacewidth`"
msgstr ""

#: ../../source/inc/image_fonts:71
#: ../../source/inc/image_fonts:107
# 07c5f542dc2c4e6bbc2837e7ee70b4f6
# fb9ea2567ecd4580ab6d9b040ad58d4d
msgid "The width of a space character, an integer in pixels."
msgstr ""

#: ../../source/inc/image_fonts:74
#: ../../source/inc/image_fonts:110
# 853212508f744d01910c0770ae4e8b8d
# a5a063af4a084284b45f03041e123126
msgid "`default_kern`"
msgstr ""

#: ../../source/inc/image_fonts:74
#: ../../source/inc/image_fonts:110
# 1dacf4e9ab7c4ba7bc925b05d1961666
# 8337697278b74317a70d5ba1ce0d0fdb
msgid "The default kern spacing between characters, in pixels."
msgstr ""

#: ../../source/inc/image_fonts:77
#: ../../source/inc/image_fonts:114
# a230af77b36a45eaa880906a1c4c51de
# 6133d2f4fd6f436c832ed46adbc0c1f5
msgid "`kerns`"
msgstr ""

#: ../../source/inc/image_fonts:77
#: ../../source/inc/image_fonts:113
# 9a86698c06054703ab1ace94985c30e8
# 4680e744383c4666abe922e065fb89a2
msgid "A map from two-character strings to the kern that should be used between those characters."
msgstr ""

#: ../../source/inc/image_fonts:82
# 5a694cb9da924dc0b1ec5b1047188306
msgid "This registers an SFont with the given details. Please note that size, bold, italic, and underline are all advisory (used for matching), and do not change the appearance of the font."
msgstr ""

#: ../../source/inc/image_fonts:86
# ae116afbaa954855845a2e2c8e62a1b6
msgid "`More information about SFont. <http://www.linux-games.com/sfont/>`_"
msgstr ""

#: ../../source/inc/image_fonts:104
# 84072007d3c84bada92092504095dc9c
msgid "The file containing the sfont image, a string."
msgstr ""

#: ../../source/inc/image_fonts:121
# d33682f6fdcf4549bd1d4c97e3bda8a3
msgid "`charset` - The character set of the font. A string containing characters in"
msgstr ""

#: ../../source/inc/image_fonts:117
# 119525ee1b544954b82ecc66c5868afc
msgid "the order in which they are found in the image. The default character set for a SFont is::"
msgstr ""

#: ../../source/text.rst:525
# 707ea0886ff946b298a2a674a824fa5b
msgid "As BMFont is the most complete of the three image font formats Ren'Py supports, it's the one recommended for new projects. An example of BMFont use is::"
msgstr ""

#: ../../source/text.rst:540
# 811bd758b4b74ec09e4e8f7fc607db90
msgid "Font Groups"
msgstr ""

#: ../../source/text.rst:542
# cedc80ad404b4fae8d252382b789c018
msgid "When creating a multilingual game, it may not be possible to find a single font that covers every writing system the game use while projecting the the mood the creator intends. To support this, Ren'Py supports font groups that can take characters from two or more fonts and combine them into a single font."
msgstr ""

#: ../../source/text.rst:548
# 23ed76820316430db37eca2549543c60
msgid "To create a font group, create a FontGroup object and call the .add method on it once or more. a FontGroup can be used wherever a font name can be used. The add method takes the start and end of a range of unicode character points, and the first range to cover a point is used."
msgstr ""

#: ../../source/inc/font_group:5
# 2de22805a53b445b8acf0593c18b3ece
msgid "A group of fonts that can be used as a single font."
msgstr ""

#: ../../source/inc/font_group:9
# 46779edd36204b33b160239215eb91aa
msgid "Associates a range of characters with a `font`."
msgstr ""

#: ../../source/inc/font_group:13
# 5fc5057ec8494f2b9033e6482ee101a5
msgid "`start`"
msgstr ""

#: ../../source/inc/font_group:12
# 2279812d693444dc891b783b60954c24
msgid "The start of the range. This may be a single-character string, or an integer giving a unicode code point."
msgstr ""

#: ../../source/inc/font_group:17
# 9e4056dabf8c4574b25f9b487b94a36f
msgid "`end`"
msgstr ""

#: ../../source/inc/font_group:16
# 30ccc8aaf96541c0b4a592499e786f77
msgid "The end of the range. This may be a single-character string, or an integer giving a unicode code point."
msgstr ""

#: ../../source/inc/font_group:19
# f1b9785b543c4f0a807258eb58c9b259
msgid "When multiple .add() calls include the same character, the first call takes precedence."
msgstr ""

#: ../../source/inc/font_group:22
# 3c76d744a2274170ae37f2cc7edcacc6
msgid "This returns the FontGroup, so that multiple calls to .add() can be chained together."
msgstr ""

#: ../../source/text.rst:562
# dabb3fb0e1fe424e952051ccaebb20b7
msgid "Text Displayable"
msgstr ""

#: ../../source/text.rst:564
# a1f48ef4120c4d69a722be86df51fe87
msgid "Text can also be used as a :ref:`displayable <displayables>`, which allows you to apply transforms to text, displaying it as if it was an image and moving it around the screen."
msgstr ""

#: ../../source/inc/text:5
# d515a7a64f334d0ba2ab84b4010a2640
msgid "A displayable that displays text on the screen."
msgstr ""

#: ../../source/inc/text:9
# 8499b4a07dd547c2a603e65d3df35b2c
msgid "`text`"
msgstr ""

#: ../../source/inc/text:8
# ce7e30657cda46ebbed8e32a985ae34a
msgid "The text to display on the screen. This may be a string, or a list of strings and displayables."
msgstr ""

#: ../../source/inc/text:14
# f52a1d76ba2b4807a7a97db4b579b9fe
msgid "`slow`"
msgstr ""

#: ../../source/inc/text:12
# f870d2ee24ab4f208d5a4b1e56ba42c0
msgid "Determines if the text is displayed slowly, being typed out one character at the time. If None, slow text mode is determined by the :propref:`slow_cps` style property. Otherwise, the truth value of this parameter determines if slow text mode is used."
msgstr ""

#: ../../source/inc/text:18
# b011ece81c5b44d9aff8f325b04539e4
msgid "`scope`"
msgstr ""

#: ../../source/inc/text:17
# a383d38f010d43f7afcd2edc7f1f3517
msgid "If not None, this should be a dictionary that provides an additional scope for text interpolation to occur in."
msgstr ""

#: ../../source/inc/text:21
# 9b5db3f1e6b648dca25c927c727460fc
msgid "`substitute`"
msgstr ""

#: ../../source/inc/text:21
# 54968ce1c6134c0798bd8a3b24492d53
msgid "If true, text interpolation occurs. If false, it will not occur. If None, they are controlled by :var:`config.new_substitutions`."
msgstr ""

#: ../../source/text.rst:571
# ca3d8041ed9f4cf1bee8c16906957c2f
msgid "Slow Text Concerns"
msgstr ""

#: ../../source/text.rst:573
# 749dead898f648c4a4f36a1c1a7ced20
msgid "Ren'Py allows the creator or user to indicate that text should be displayed slowly. In this case, Ren'Py will render the text to a texture, and then draw rectangles from the texture to the screen."
msgstr ""

#: ../../source/text.rst:577
# 20f46f9b633946599aa45330c8f16d6f
msgid "Unfortunately, this means that it's possible to get rendering artifacts when characters overlap. To minimize these rendering artifacts, ensure that the :propref:`line_leading` and :propref:`line_spacing` properties are large enough that lines do not overlap. If the bottoms of characters on the first line are clipped, espeically if line_spacing is negative, consider increasing :propref:`line_overlap_split`."
msgstr ""

#: ../../source/text.rst:585
# 2387618047a34e148c095298d883fac0
msgid "Horizontal artifacts are also possible when characters are kerned together, but these artifacts are less severe, as they exist for only a single frame."
msgstr ""

#: ../../source/text.rst:589
# a8b9935460994b36b1f634d8bf8ab479
msgid "Artifacts aren't a problem for static text, like the text in menus and other parts of the user interface."
msgstr ""

#: ../../source/text.rst:593
# ac47c83f162946c19014411753f5225c
msgid "Text Overflow Logging"
msgstr ""

#: ../../source/text.rst:595
# 04b36fda3e7948d09a48f363db86b3ff
msgid "Ren'Py can log cases where text expands outside of the area allocated for it. To enable text overflow logging, the following steps are necessary."
msgstr ""

#: ../../source/text.rst:599
# dfe729ae493a4b14bb8ba3539595b2b9
msgid "Set the :var:`config.debug_text_overflow` variable to true."
msgstr ""

#: ../../source/text.rst:600
# ace876a3c0b94b38af376715f541b970
msgid "Set the :propref:`xmaximum` and :propref:`ymaximum` style properties on either the Text displayable, or a container enclosing it."
msgstr ""

#: ../../source/text.rst:602
# 78bec852b92c4ff9b944025379709269
msgid "Run the game."
msgstr ""

#: ../../source/text.rst:604
# 3ec3dbe3843f48d0be68c9cfa53b9ff4
msgid "Whenever text is displayed that overflows the available area, Ren'Py will log an error to the ``text_overflow.txt`` file."
msgstr ""

