# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.15.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-27 22:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/displaying_images.rst:8
# 61c3074fb89b4120b613914714f0795d
msgid "Displaying Images"
msgstr ""

#: ../../source/displaying_images.rst:10
# 1d6b779fa1864f76a4f6cba453a72b61
msgid "The defining aspect of a visual novel, lending its name to the form, are the visuals. Ren'Py contains four statements that control the display of images, and a model that determines the order in which the images are displayed. This makes it convenient to display images in a manner that is suitable for use in visual novels and other storytelling games."
msgstr ""

#: ../../source/displaying_images.rst:16
# 24f1444159374a3698550cda07da2cba
msgid "The four statements that work with images are:"
msgstr ""

#: ../../source/displaying_images.rst:18
# fadfa10a3d2b4632afd8b9ff6336bbf6
msgid "``image`` - defines a new image."
msgstr ""

#: ../../source/displaying_images.rst:19
# b9d7901ea84a45b3a8eb2d28d11f6e1b
msgid "``show`` - shows an image on a layer."
msgstr ""

#: ../../source/displaying_images.rst:20
# fd27a245563f4a10b73f2faab6aac755
msgid "``scene`` - clears a layer, and optionally shows an image on that layer."
msgstr ""

#: ../../source/displaying_images.rst:21
# 3c8892ef26ed487f8178a3f87414c364
msgid "``hide`` - removes an image from a layer."
msgstr ""

#: ../../source/displaying_images.rst:23
# 8f1aa15af7b7482ba3e2b9ad416eb2ea
msgid "As abrupt changes of image can be disconcerting to the user, Ren'Py has the ``with`` statement, which allows effects to be applied when the scene is changed."
msgstr ""

#: ../../source/displaying_images.rst:29
# f9783f7cb2894cf98838a21596169e1a
msgid "Concepts"
msgstr ""

#: ../../source/displaying_images.rst:32
# 8de0677baf954e9bb2ef84877372f2d8
msgid "Image"
msgstr ""

#: ../../source/displaying_images.rst:34
# a154c0963a4c40d69024cb7c48d052b7
msgid "An image is something that can be show to the screen using the show statement. An image consists of a name and a displayable. When the image is shown on a layer, the displayable associated with it is displayed on that layer."
msgstr ""

#: ../../source/displaying_images.rst:39
# 5384babe32f84affbf1f2e8929400efb
msgid "An :dfn:`image name` consists of one or more names, separated by spaces. The first component of the image name is called the :dfn:`image tag`. The second and later components of the name are the :dfn:`image attributes`."
msgstr ""

#: ../../source/displaying_images.rst:44
# e688c2b2124444b883ece600e8472408
msgid "For example, take the image name ``mary beach night happy``. The image tag is ``mary``, while the image attributes are ``beach``, ``night``, and ``happy``."
msgstr ""

#: ../../source/displaying_images.rst:48
# 2362b0decf814304852f56dd0fc9e5ad
msgid "A displayable is something that can be shown on the screen. The most common thing to show is a static image, which can be specified by giving the filename of the image, as a string. In the example above, we might use ``\"mary_beach_night_happy.png\"`` as the filename. However, an image may refer to :ref:`any displayable Ren'Py supports <displayables>`, not just static images. Thus, the same statements that are used to display images can also be used for animations, solid colors, and the other types of displayables."
msgstr ""

#: ../../source/displaying_images.rst:58
# bfff89ce4e62483a9370f58939e78220
msgid "Layer"
msgstr ""

#: ../../source/displaying_images.rst:60
# b2b3893545be4e8481369f95992e7e3d
msgid "A layer is a list of displayables that are shown on the screen. Ren'Py supports multiple layers, including user-defined layers. The order of the layers is fixed within a game (controlled by the :var:`config.layers` variable), while the order of displayables within a layer is controlled by the order in which the scene and show statements are called, and the properties given to those statements."
msgstr ""

#: ../../source/displaying_images.rst:67
# a869521ac7fd4ddb9008681019e04194
msgid "The following layers are defined as part of Ren'Py:"
msgstr ""

#: ../../source/displaying_images.rst:72
# ff8d14aa2fd64c72b4a573df8b0b8ef7
msgid "master"
msgstr ""

#: ../../source/displaying_images.rst:70
# 53a0ef34d75a43ccb99bc03ca8fbd8b2
msgid "This is the default layer that is used by the scene, show, and hide statements. It's generally used for backgrounds and character sprites."
msgstr ""

#: ../../source/displaying_images.rst:76
# a39f55926cdf48498cb8bff328a72a70
msgid "transient"
msgstr ""

#: ../../source/displaying_images.rst:75
# 3af8725d4c594a52b5c2e540762e3f0a
msgid "The default layer used by ui functions. This layer is cleared at the end of each interaction."
msgstr ""

#: ../../source/displaying_images.rst:79
# b16af552529348398917c5cd506e7380
msgid "screens"
msgstr ""

#: ../../source/displaying_images.rst:79
# 6d82bea021a640e489bc7e82330f94f7
msgid "This layer is used by the screen system."
msgstr ""

#: ../../source/displaying_images.rst:84
# cb12c58222ad481fadfca73166c6de31
msgid "overlay"
msgstr ""

#: ../../source/displaying_images.rst:82
# b9a67606e4124c3d9a5a10226909d4b6
msgid "The default layer used when a ui function is called from within an overlay function. This layer is cleared when an interaction is restarted."
msgstr ""

#: ../../source/displaying_images.rst:86
# 58d4853aedf04435a0bf633da3469330
msgid "Additional layers can be defined by updating :var:`config.layers`, and the various other layer-related config variables. Using :func:`renpy.layer_at_list`, one or more transforms can be applied to a layer."
msgstr ""

#: ../../source/displaying_images.rst:94
# 7f3c033fc1eb4a5f87426a3628f1e05f
msgid "Image Statement"
msgstr ""

#: ../../source/displaying_images.rst:96
# c78d5b01cc06419aae2f24d3bc1c4868
msgid "An image statement is used to define an image. An image statement consists of a single logical line beginning with the keyword ``image``, followed by an image name, an equals sign (``=``), and a displayable. For example::"
msgstr ""

#: ../../source/displaying_images.rst:110
# 9624cef7283744c89a482b70f81b40c0
msgid "The image statement must be run at init-time, before game code runs. When not contained inside an init block, image statements are run at init-time, as if they were placed inside an init block of priority 0."
msgstr ""

#: ../../source/displaying_images.rst:115
# f55c7438862c47b584b29d102d7b55d7
msgid "See also the :ref:`ATL variant of the image statement. <atl-image-statement>`"
msgstr ""

#: ../../source/displaying_images.rst:121
# be7bf26ab46c4bca8df61bc23c02c322
msgid "Show Statement"
msgstr ""

#: ../../source/displaying_images.rst:123
# 40d386cda9974a0e8d1c179f42c7ba5c
msgid "The show statement is used to display an image on a layer. A show statement consists of a single logical line beginning with the keyword ``show``, followed by an image name, followed by zero or more properties."
msgstr ""

#: ../../source/displaying_images.rst:128
# 22a11b8845d94a37b43f3d654aa9d3fc
msgid "If the show statement is given the exact name of an existing image, that image is the one that is shown. Otherwise, Ren'Py will attempt to find a unique image that:"
msgstr ""

#: ../../source/displaying_images.rst:132
# 60caee9319b1461a90d1f39b8ecd1c8f
msgid "Has the same tag as the one specified in the show statement."
msgstr ""

#: ../../source/displaying_images.rst:133
# dffa2881896b49a2b38d6297c07023ad
msgid "Has all of the attributes given in the show statement."
msgstr ""

#: ../../source/displaying_images.rst:134
# 48a6d7ba3ab84ba4840a5e8d253d0ba2
msgid "If an image with the same tag is already showing, shares the largest number of attributes with that image."
msgstr ""

#: ../../source/displaying_images.rst:137
# a09856edb7014ef9aac897711428a4bf
msgid "If a unique image cannot be found, an exception occurs."
msgstr ""

#: ../../source/displaying_images.rst:139
# 424230ee71cd4197a852f8136c3e7ea9
msgid "If an image with the same image tag is already showing on the layer, the new image replaces it. Otherwise, the image is placed above all other images in the layer. (That is, closest to the user.) This order may be modified by the zorder and behind properties."
msgstr ""

#: ../../source/displaying_images.rst:144
# ab3e059e23254a11b8c7d441079843af
msgid "The show statement does not cause an interaction to occur. For the image to actually be displayed to the user, a statement that causes an interaction (like the say, menu, pause, and with statements) must be run."
msgstr ""

#: ../../source/displaying_images.rst:149
# d7ce7e0390414bdea9daaa28ebcba7bf
msgid "The show statement takes the following properties:"
msgstr ""

#: ../../source/displaying_images.rst:154
# fdc928778fab49c189ed2f534e594504
msgid "``as``"
msgstr ""

#: ../../source/displaying_images.rst:152
# 73810a14ad5148c2a18d0645bcc71985
msgid "The as property takes a name. This name is used in place of the image tag when the image is shown. This allows the same image to be on the screen twice."
msgstr ""

#: ../../source/displaying_images.rst:165
# e0f3fde959e94ed4925b21e77f5d4a65
msgid "``at``"
msgstr ""

#: ../../source/displaying_images.rst:157
# 99dd8e92de09478f82beee0f94b94cb2
msgid "The at property takes one or more comma-separated simple expressions. Each expression must evaluate to a transform. The transforms are applied to the image in left-to-right order."
msgstr ""

#: ../../source/displaying_images.rst:162
# 3346a4d1a2e3431e87f4b4b820820b29
msgid "If no at clause is given, Ren'Py will retain any existing transform that has been applied to the image. If no transform exists, the image will be displayed using the :var:`default` transform."
msgstr ""

#: ../../source/displaying_images.rst:170
# 2b5a881a2fca4a79a8071959ed049a27
msgid "``behind``"
msgstr ""

#: ../../source/displaying_images.rst:168
# c28e348dd47a4e76b28996520cdccb74
msgid "Takes a comma-separated list of one or more names. Each name is taken as an image tag. The image is shown behind all images with the given tags that are currently being shown."
msgstr ""

#: ../../source/displaying_images.rst:173
#: ../../source/displaying_images.rst:264
# e851ab87f81140b5a0e0d4c320959978
# 12687f94accb40a9bdcb43c9fd173358
msgid "``onlayer``"
msgstr ""

#: ../../source/displaying_images.rst:173
# 9cdee3cf061f49b7b318a6ff99261638
msgid "Takes a name. Shows the image on the named layer."
msgstr ""

#: ../../source/displaying_images.rst:179
# 1744c47be74746519aeced370bed1fa1
msgid "``zorder``"
msgstr ""

#: ../../source/displaying_images.rst:176
# 784daad4700f4876bdbfe9defc067515
msgid "Takes an integer. The integer specifies the relative ordering of images within a layer, with larger numbers being closer to the user. This isn't generally used in Ren'Py code, but can be useful when porting code from other engines."
msgstr ""

#: ../../source/displaying_images.rst:181
# 5ff1d1d2daea428e83e258ecfd804081
msgid "Assuming we have the following images defined::"
msgstr ""

#: ../../source/displaying_images.rst:187
# ef69019ae06041e8a79124b2188b1445
msgid "Some example show statements are::"
msgstr ""

#: ../../source/displaying_images.rst:209
# 4bae8d0379744636832894f83565c035
msgid "**Show Expression.** A variant of the show statement replaces the image name with the keyword ``expression``, followed by a simple expression. The expression must evaluate to a displayable, and the displayable is shown on the layer. To hide the displayable, a tag must be given with the as statement."
msgstr ""

#: ../../source/displaying_images.rst:216
#: ../../source/displaying_images.rst:266
# bcde7196a5614ed69047b4f79b86f5eb
# a9cb33744b1c4a0aa95be89bcada3194
msgid "For example::"
msgstr ""

#: ../../source/displaying_images.rst:223
# e968f4a1d9694925878cd0c435f199f5
msgid "Scene Statement"
msgstr ""

#: ../../source/displaying_images.rst:225
# c4eb41625f1d4e5b9b47047c28c90d84
msgid "The scene statement removes all displayables from a layer, and then shows an image on that layer. It consists of the keyword ``scene``, followed by an image name, followed by zero or more properties. The image is shown in the same way as in the show statement, and the scene statement takes the same properties as the show statement."
msgstr ""

#: ../../source/displaying_images.rst:231
# 6e67440967a24d87a73e025d8f161f26
msgid "The scene statement is often used to show an image on the background layer. For example::"
msgstr ""

#: ../../source/displaying_images.rst:236
# e2207336ac2c4688af946d8ebf3caa04
msgid "**Scene Expression.** Like the show statement, the scene statement can take expressions instead of image names."
msgstr ""

#: ../../source/displaying_images.rst:240
# 3433b5e350484fa8a461614ec3233cea
msgid "**Clearing a layer.** When the image name is omitted entirely, the scene statement clears all displayables from a layer without showing another displayable."
msgstr ""

#: ../../source/displaying_images.rst:248
# 99dd909d4b584289a815549a2bc795df
msgid "Hide Statement"
msgstr ""

#: ../../source/displaying_images.rst:250
# f2960aa2eb494265955b5c95e3e461ce
msgid "The hide statement removes an image from a layer. It consists of the keyword ``hide``, followed by an image name, followed by an optional property. The hide statement takes the image tag from the image name, and then hides any image on the layer with that tag."
msgstr ""

#: ../../source/displaying_images.rst:255
# 8ea0355a1a4d409d95695666f01bf34c
msgid "Hide statements are rarely necessary. If a sprite represents a character, then a hide statement is only necessary when the character leaves the scene. When the character changes her emotion, it is preferable to use the show statement instead, as the show statement will automatically replace an image with the same tag."
msgstr ""

#: ../../source/displaying_images.rst:261
# 139a32795b8f49c59abab664fddb20ce
msgid "The hide statement takes the following property:"
msgstr ""

#: ../../source/displaying_images.rst:264
# ff9d073d562b4359b30dc13d4a5d7227
msgid "Takes a name. Hides the image from the named layer."
msgstr ""

#: ../../source/displaying_images.rst:272
# afeb5d635a174484a07522b6596062c8
msgid "You should never write::"
msgstr ""

#: ../../source/displaying_images.rst:277
# 68967594975142ebab1d9b238cbd0b87
msgid "Instead, just write::"
msgstr ""

#: ../../source/displaying_images.rst:285
# efd7568771b949588f14ada0010de629
msgid "With Statement"
msgstr ""

#: ../../source/displaying_images.rst:287
# 4deba5c643954f7f893d1f422d2d0003
msgid "The with statement is used to apply a transition effect when the scene is changed, making showing and hiding images less abrupt. The with statement consists of the keyword ``with``, followed by a simple expression that evaluates either to a transition object or the special value ``None``."
msgstr ""

#: ../../source/displaying_images.rst:293
# 83ecc26313dd481eb5fb723bc24ce159
msgid "The transition effect is applied between the contents of the screen at the end of the previous interaction (with transient screens and displayables hiddden), and the current contents of the scene, after the show and hide statements have executed."
msgstr ""

#: ../../source/displaying_images.rst:298
# cfb62f8cc4e049f9b42e67af20df99ba
msgid "The with statement causes an interaction to occur. The duration of this interaction is controlled by the user, and the user can cause it to terminate early."
msgstr ""

#: ../../source/displaying_images.rst:302
# 2ec1dff1aba9435881b215a76780f853
msgid "For a full list of transitions that can be used, see the chapter on :ref:`transitions <transitions>`."
msgstr ""

#: ../../source/displaying_images.rst:305
# 2dbb59d25a174d7e95079efd1167e3e6
msgid "An example of the with statement is::"
msgstr ""

#: ../../source/displaying_images.rst:314
# 6d75dc1ffc8e47eb94d613975b34db4c
msgid "This causes two transitions to occur. The first with statement uses the ``dissolve`` transition to change the screen from what was previously shown to the washington background. (The ``dissolve`` transition is, by default, defined as a .5 second dissolve.)"
msgstr ""

#: ../../source/displaying_images.rst:319
# b42a698b11394d17ab46fd0a10ad74b4
msgid "The second transition occurs after the Eileen and Lucy images are shown. It causes a dissolve from the scene consisting solely of the background to the scene consisting of all three images - the result is that the two new images appear to dissolve in simultaneously."
msgstr ""

#: ../../source/displaying_images.rst:327
# 3b428f83e1c246d4a4e199a5175ed8d1
msgid "With None"
msgstr ""

#: ../../source/displaying_images.rst:329
# b6608c36faa64177abfeaa7094058943
msgid "In the above example, there are two dissolves. But what if we wanted the background to appear instantly, followed by a dissolve of the two characters? Simply omitting the first with statement would cause all three images to dissolve in - we need a way to say that the first should be show instantly."
msgstr ""

#: ../../source/displaying_images.rst:335
# ada40399e69a44c984f32cabb4b94fcf
msgid "The with statement changes behavior when given the special value ``None``. The ``with None`` statement causes an abbreviated interaction to occur, without changing what the user sees. When the next transition occurs, it will start from the scene as it appears at the end of this abbreviated interaction."
msgstr ""

#: ../../source/displaying_images.rst:341
# e15a2f5fcf8d43259a7c57c4bdeaba97
msgid "For example, in the code::"
msgstr ""

#: ../../source/displaying_images.rst:350
# 78cd74578c14496980b0877789016348
msgid "Only a single transition occurs, from the washington background to the scene consisting of all three images."
msgstr ""

#: ../../source/displaying_images.rst:354
# 0ea2685b4c5e419ebc30458b022386e4
msgid "With Clause of Scene, Show, and Hide Statements"
msgstr ""

#: ../../source/displaying_images.rst:356
# ed94fd73a7b149fc83b36f477d4de9d4
msgid "The show, scene, and hide statements can take an optional with clause, which allows a transition to be combined with showing or hiding an image. This clause follows the statements at the end of the same logical line. It begins with the keyword ``with``, followed by a simple expression."
msgstr ""

#: ../../source/displaying_images.rst:362
# 7feb310bbbdc4da3bbdf3ddcc6e715cc
msgid "The with clause is equivalent to preceding the line with a ``with None`` statement, and following it by a :ref:`with statement <with-statement>` containing the text of the with clause. For example::"
msgstr ""

#: ../../source/displaying_images.rst:369
# a44cd44d9e6f4045a3f28c88a2f32a06
msgid "is equivalent to::"
msgstr ""

