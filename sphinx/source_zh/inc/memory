.. Automatically generated file - do not modify.

.. function:: renpy.diff_memory(update=True)
    
    Profiles objects, surface, and texture memory use by Ren'Py and the game.
    Writes (to memory.txt and stdout) the difference in memory usage from the
    last time this function was called with `update` true.
    
    The accounting is by names in the store and in the Ren'Py implementation
    that the memory is reachable from. If an object is reachable from more
    than one name, it's assigned to the name it's most directly reachable
    from.
    
    As it has to scan all memory used by Ren'Py, this function may take a
    long time to complete.

.. function:: renpy.profile_memory(fraction=1.0, minimum=0)
    
    Profiles object, surface, and texture memory use by Ren'Py and the
    game. Writes an accounting of memory use by to the memory.txt file and
    stdout.
    
    The accounting is by names in the store and in the Ren'Py implementation
    that the memory is reachable from. If an object is reachable from more
    than one name, it's assigned to the name it's most directly reachable
    from.
    
    `fraction`
        The fraction of the total memory usage to show. 1.0 will show all
        memory usage, .9 will show the top 90%.
    
    `minimum`
        If a name is accounted less than `minimum` bytes of memory, it will
        not be printed.
    
    As it has to scan all memory used by Ren'Py, this function may take a
    long time to complete.

.. function:: renpy.profile_rollback()
    
    Profiles memory used by the rollback system. Writes (to memory.txt and
    stdout) the memory used by the rollback system. This tries to account
    for rollback memory used by various store variables, as well as by
    internal aspects of the rollback system.

