.. Automatically generated file - do not modify.

.. function:: renpy.register_bmfont(name=None, size=None, bold=False, italics=False, underline=False, filename=None)
    
    This registers a BMFont with the given details. Please note that size, bold,
    italic, and underline are all advisory (used for matching), and do not
    change the appearance of the font.
    
    Please see the `BMFont home page <http://www.angelcode.com/products/bmfont/>`_
    for the tool that creates BMFonts. Ren'Py expects that the filename
    parameter will be to a file in the BMFont text format, that describes a
    32-bit font. The Alpha channel should contain the font information, while
    the Red, Green, and Blue channels should be set to one. The image files,
    kerning, and other control information is read out of the BMFont file.
    
    We recommend including Latin and General Punctuation as part of your BMFont,
    to ensure all of the Ren'Py interface can render.
    
    `name`
        The name of the font being registered, a string.
    
    `size`
        The size of the font being registered, an integer.
    
    `bold`
        The boldness of the font being registered, a boolean.
    
    `italics`
        The italicness of the font being registered, a boolean.
    
    `underline`
        An ignored parameter.
    
    `filename`
        The file containing BMFont control information.

.. function:: renpy.register_mudgefont(name=None, size=None, bold=False, italics=False, underline=False, filename=None, xml=None, spacewidth=10, default_kern=0, kerns={})
    
    This registers a MudgeFont with the given details. Please note that size,
    bold, italic, and underline are all advisory (used for matching), and do not
    change the appearance of the font.
    
    Please see the `MudgeFont home page <http://www.larryhastings.com/programming/mudgefont/>`_
    for the tool that creates MudgeFonts. Ren'Py assumes that character codes
    found in the MudgeFont xml file are unicode character numbers, and ignores
    negative character codes.
    
    `name`
        The name of the font being registered, a string.
    
    `size`
        The size of the font being registered, an integer.
    
    `bold`
        The boldness of the font being registered, a boolean.
    
    `italics`
        The italicness of the font being registered, a boolean.
    
    `underline`
        An ignored parameter.
    
    `filename`
        The file containing the MudgeFont image, a string. The image is usually
        a TGA file, but could be a PNG or other format that Ren'Py supports.
    
    `xml`
        The xml file containing information generated by the MudgeFont tool.
    
    `spacewidth`
        The width of a space character, an integer in pixels.
    
    `default_kern`
        The default kern spacing between characters, in pixels.
    
    `kerns`
        A map from two-character strings to the kern that should be used between
        those characters.

.. function:: renpy.register_sfont(name=None, size=None, bold=False, italics=False, underline=False, filename=None, spacewidth=10, default_kern=0, kerns={}, charset=u'!"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~')
    
    This registers an SFont with the given details. Please note that size, bold,
    italic, and underline are all advisory (used for matching), and do not
    change the appearance of the font.
    
    `More information about SFont. <http://www.linux-games.com/sfont/>`_
    
    `name`
        The name of the font being registered, a string.
    
    `size`
        The size of the font being registered, an integer.
    
    `bold`
        The boldness of the font being registered, a boolean.
    
    `italics`
        The italicness of the font being registered, a boolean.
    
    `underline`
        An ignored parameter.
    
    `filename`
        The file containing the sfont image, a string.
    
    `spacewidth`
        The width of a space character, an integer in pixels.
    
    `default_kern`
        The default kern spacing between characters, in pixels.
    
    `kerns`
        A map from two-character strings to the kern that should be used between
        those characters.
    
    `charset` - The character set of the font. A string containing characters in
        the order in which they are found in the image. The default character
        set for a SFont is::
    
            ! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ?
            @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _
            ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~

