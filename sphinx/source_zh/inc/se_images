.. Automatically generated file - do not modify.

.. function:: renpy.get_at_list(name, layer=None)
    
    Returns the list of transforms being applied to the image with tag `name`
    on `layer`. Returns an empty list if no transofrms are being applied, or
    None if the image is not shown.
    
    If `layer` is None, uses the default layer for the given tag.

.. function:: renpy.hide(name, layer=None)
    
    Hides an image from a layer. The python equivalent of the hide statement.
    
    `name`
         The name of the image to hide. Only the image tag is used, and
         any image with the tag is hidden (the precise name does not matter).
    
    `layer`
         The layer on which this function operates. If None, uses the default
         layer associated with the tag.

.. function:: renpy.image(name, d)
    
    Defines an image. This function is the python equivalent of the
    image statement.
    
    `name`
        The name of the image to display, a string.
    
    `d`
        The displayable to associate with that image name.
    
    This function may only be run from inside an init block. It is an
    error to run this function once the game has started.

.. function:: renpy.layer_at_list(at_list, layer='master')
    
    The python equivalent of the ``show layer`` `layer` ``at`` `at_list`
    statement.

.. function:: renpy.scene(layer='master')
    
    Removes all displayables from `layer`. This is equivalent to the scene
    statement, when the scene statement is not given an image to show.
    
    A full scene statement is equivalent to a call to renpy.scene followed by a
    call to :func:`renpy.show`. For example::
    
        scene bg beach
    
    is equivalent to::
    
        $ renpy.scene()
        $ renpy.show("bg beach")

.. function:: renpy.show(name, at_list=[ ], layer='master', what=None, zorder=0, tag=None, behind=[ ])
    
    Shows an image on a layer. This is the programmatic equivalent of the show
    statement.
    
    `name`
        The name of the image to show, a string.
    
    `at_list`
        A list of transforms that are applied to the image.
        The equivalent of the ``at`` property.
    
    `layer`
        A string, giving the name of the layer on which the image will be shown.
        The equivalent of the ``onlayer`` property. If None, uses the default
        layer associated with the tag.
    
    `what`
        If not None, this is a displayable that will be shown in lieu of
        looking on the image. (This is the equivalent of the show expression
        statement.) When a `what` parameter is given, `name` can be used to
        associate a tag with the image.
    
    `zorder`
        An integer, the equivalent of the ``zorder`` property. If None, the
        zorder is preserved if it exists, and is otherwise set to 0.
    
    `tag`
        A string, used to specify the image tag of the shown image. The
        equivalent of the ``as`` property.
    
    `behind`
        A list of strings, giving image tags that this image is shown behind.
        The equivalent of the ``behind`` property.

.. function:: renpy.show_layer_at(at_list, layer='master')
    
    The python equivalent of the ``show layer`` `layer` ``at`` `at_list`
    statement.

